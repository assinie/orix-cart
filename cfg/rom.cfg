FEATURES {
    STARTADDRESS: default = $C000;
}
SYMBOLS {
    __ZPSTART__:    type = weak, value = $0000;
}
MEMORY {
    ZP:   file = "", define = yes, start = __ZPSTART__, size = $0100;
    MAIN: file = %O,               start = %S,          size = $10000 - %S - 16, fill = yes, fillval = $ff;
    ORIXVEC:                       start = $FFF0,       size = 10;
    CPUVEC:                        start = $FFFA,       size = 6;
}
SEGMENTS {
    ZEROPAGE:    load = ZP,   type = zp;
    CODE:        load = MAIN, type = ro, define = yes;
    DATA:        load = MAIN, type = rw, optional = yes;
    RODATA:      load = MAIN, type = rw, optional = yes;
    BSS:         load = MAIN, type = bss, optional=yes, define = yes;
    INSTRTBL:    load = MAIN, type = ro, define = yes;
    INSTRTBL2:   load = MAIN, type = ro, define = yes;
    INSTRJMP:    load = MAIN, type = ro, define = yes;
    SIGNATURE:   load = MAIN, type = ro, define = yes, optional = yes;
    ORIXVECT:    load = ORIXVEC, type = ro, define = yes;
    CPUVECT:     load = CPUVEC,  type = ro, define = yes;
}

#FEATURES {
#    CONDES: type    = constructor,
#            label   = __CONSTRUCTOR_TABLE__,
#            count   = __CONSTRUCTOR_COUNT__,
#            segment = ONCE;
#    CONDES: type    = destructor,
#            label   = __DESTRUCTOR_TABLE__,
#            count   = __DESTRUCTOR_COUNT__,
#            segment = RODATA;
#    CONDES: type    = interruptor,
#            label   = __INTERRUPTOR_TABLE__,
#            count   = __INTERRUPTOR_COUNT__,
#            segment = RODATA,
#            import  = __CALLIRQ__;
#}
